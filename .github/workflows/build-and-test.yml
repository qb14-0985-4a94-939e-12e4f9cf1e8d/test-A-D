---

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  IMAGE_PREFIX: "ghcr.io/${{ github.repository }}"
  REGISTRY: 'ghcr.io'

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - workdir: microservice_a
          - workdir: microservice_b
          - workdir: microservice_c
      fail-fast: false
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: "build ${{matrix.workdir}} image"
        working-directory: "${{matrix.workdir}}"
        run: "./build.sh ${{github.sha}}"

      - name: "run ${{matrix.workdir}} container"
        working-directory: "${{matrix.workdir}}"
        run: >-
          docker run
          --name ${{matrix.workdir}}__${{github.sha}}
          -d
          -P
          ${{ env.IMAGE_PREFIX }}/${{matrix.workdir}}:${{github.sha}}

      - name: "cache | pip"
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: "test | deps"
        working-directory: "${{matrix.workdir}}"
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: "test | check if container is ready"
        working-directory: "${{matrix.workdir}}"
        run: |
          __RETRY=10
          for i in $(seq 1 $__RETRY); do
              __CONTAINER_JSON=$(docker inspect ${{matrix.workdir}}__${{github.sha}})
              __CONTAINER_READINESS=$(echo $container_json | jq '.[0].State.Health.Status')
              if [[ $readiness_status == "\"healthy\"" ]]; then
                  __CONTAINER_PORT=$(echo $__CONTAINER_JSON | jq '.[0].NetworkSettings.Ports["5000/tcp"][0].HostPort')
                  echo "Container is ready, listening on $__CONTAINER_PORT"
                  exit 0
              else
                  echo "Container is not ready yet, retrying in 10 seconds..."
              fi
              sleep 10s
          done
          echo "Error: Container failed to become ready after $retries retries"
          exit 1

      - name: "test | exec"
        working-directory: "${{matrix.workdir}}"
        run: >-
          pipenv run
          python  test.py
          --port=$__CONTAINER_PORT

      - name: "debug: get info for ${{matrix.workdir}} container"
        if: failure()
        run: |
          docker logs ${{matrix.workdir}}__${{github.sha}}
          docker inspect ${{matrix.workdir}}__${{github.sha}}

      - name: "push | login"
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "push | ${{matrix.workdir}} image"
        working-directory: "${{matrix.workdir}}"
        run: >-
         docker push
         ${{ env.REGISTRY }}/qb14-0985-4a94-939e-12e4f9cf1e8d/test-a-d/${{matrix.workdir}}:${{github.sha}}
