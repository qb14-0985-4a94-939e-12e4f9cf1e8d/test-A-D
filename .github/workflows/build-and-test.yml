---

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - workdir: microservice_a
          - workdir: microservice_b
          - workdir: microservice_c
      fail-fast: false
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: "build ${{matrix.workdir}} image"
        working-directory: "${{matrix.workdir}}"
        run: ls -lha

      - name: "build ${{matrix.workdir}} image"
        working-directory: "${{matrix.workdir}}"
        run: "./build.sh ${{github.sha}}"

      - name: "run ${{matrix.workdir}} container"
        working-directory: "${{matrix.workdir}}"
        run: |
          export __CONTAINER_NAME=$(uuidgen)
          # export __CONTAINER_ID=$( docker run -d -P ${{matrix.workdir}}:${{github.sha}} )

      - name: "get logs for ${{matrix.workdir}} container"
        working-directory: "${{matrix.workdir}}"
        run: echo $__CONTAINER_NAME
        # run: docker logs $__CONTAINER_ID

          # __CONTAINER_JSON=$(docker inspect $__CONTAINER_ID)
          # __CONTAINER_PORT=$(echo $__CONTAINER_JSON | jq '.[0].NetworkSettings.Ports["5000/tcp"][0].HostPort')
          # echo "${{matrix.workdir}} container is listening on $__CONTAINER_PORT"

        # tests
      - name: prep for testing
        run: |
          docker cp ./test.py $__CONTAINER_ID:/tmp/
          docker run -it $__CONTAINER_ID pipenv install --dev
      - name: exec test
        run: docker run -it $__CONTAINER_ID pipenv run test $__CONTAINER_PORT -vv

      # - name: Log into registry ${{ env.REGISTRY }}
      #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      #   if: steps.test.outputs.test_passed == 'true'
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: "pushing ${{matrix.workdir}} image"
      #   working-directory: "${{matrix.workdir}}"
      #   run: "echo ${{github.sha}}"
      #
